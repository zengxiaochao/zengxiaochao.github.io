##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Controller"))
##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/controller"))
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;

import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import $!{tableInfo.savePackageName}.entity.Result;
import org.springframework.web.bind.annotation.*;
import org.apache.ibatis.annotations.Param;
import java.util.HashMap;
import javax.annotation.Resource;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表控制层
 *
 * @author $!author
 * @since $!time.currTime()
 */
@RestController
@RequestMapping("$!tool.firstLowerCase($tableInfo.name)")
public class $!{tableName} {
    /**
     * 服务对象
     */
    @Resource
    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;

    /**
     * 分页查询
     *
     * @param pageNum 页码
     * @return 查询结果
     */
    @PostMapping("page/{pageNum}")
    public Result queryByPage(@PathVariable("pageNum") Integer pageNum, @RequestBody HashMap param) {
        Integer pageSize = (Integer) param.get("pageSize");
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryByPage(pageNum,pageSize));
    }
     /**
     * 不分页查询全部
     *
     * @return 查询结果
     */
    @GetMapping("queryAll")
    public Result queryAll() {
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryAll());
    }

    /**
     * 通过主键查询单条数据
     *
     * @param id 主键
     * @return 单条数据
     */
    @GetMapping("{id}")
    public Result queryById(@PathVariable("id") $!pk.shortType id) {
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.queryById(id));
    }

    /**
     * 新增数据
     *
     * @param $!{tool.firstLowerCase($tableInfo.name)} 实体
     * @return 新增结果
     */
    @PostMapping("add")
    public Result add($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}) {
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.insert($!{tool.firstLowerCase($tableInfo.name)}));
    }

    /**
     * 编辑数据
     *
     * @param $!{tool.firstLowerCase($tableInfo.name)} 实体
     * @return 编辑结果
     */
    @PostMapping("edit")
    public Result edit($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)}) {
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.update($!{tool.firstLowerCase($tableInfo.name)}));
    }

    /**
     * 删除数据
     *
     * @param id 主键
     * @return 删除是否成功
     */
    @PostMapping("deleteById")
    public Result deleteById($!pk.shortType id) {
        return new Result().success(this.$!{tool.firstLowerCase($tableInfo.name)}Service.deleteById(id));
    }

}
